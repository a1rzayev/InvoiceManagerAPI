{
    "openapi": "3.0.0",
    "info": {
        "title": "Invoice Manager API",
        "description": "A comprehensive API for managing invoices, products, and users",
        "contact": {
            "name": "API Support",
            "email": "admin@invoicemanager.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get all invoices",
                "description": "Retrieve a list of all invoices in the system",
                "operationId": "0b8e5b661b472432febe76177e627e86",
                "responses": {
                    "200": {
                        "description": "List of invoices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Create a new invoice",
                "description": "Create a new invoice with seller, client, and items",
                "operationId": "9a379bde2decc411b48e2fdc02a315ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoice by ID",
                "description": "Retrieve a specific invoice by its ID with seller, client, and items details",
                "operationId": "6f9874ec6f7301133948074ff6108fcb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Update invoice",
                "description": "Update an existing invoice's information including seller, client, status, and items",
                "operationId": "f72d18e23867bcd77416956363bfc090",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Delete invoice",
                "description": "Delete an invoice and all its items from the system",
                "operationId": "f6705ba1adcf67585cb5f13627c592ae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoices/status/{status}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoices by status",
                "description": "Retrieve all invoices with a specific status",
                "operationId": "172c3ed50a31ef33b423a0a2d7cefcf6",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Invoice status",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "sent",
                                "paid",
                                "overdue"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoices found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoices/seller/{sellerId}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoices by seller",
                "description": "Retrieve all invoices created by a specific seller",
                "operationId": "952a01f25c8ca82212bf3a6c827075bf",
                "parameters": [
                    {
                        "name": "sellerId",
                        "in": "path",
                        "description": "Seller user ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoices found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Seller not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Seller not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoices/client/{clientId}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get invoices by client",
                "description": "Retrieve all invoices for a specific client",
                "operationId": "c358daedb80e9a57557ebbc28ca88849",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "Client user ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoices found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoices/{id}/status": {
            "patch": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Update invoice status",
                "description": "Update only the status of an existing invoice",
                "operationId": "3ff39bae6de8869b5ae12645e6b24218",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceStatusUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invoice status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "description": "Retrieve a list of all products in the system",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "responses": {
                    "200": {
                        "description": "List of products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Create a new product with the provided information",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "description": "Retrieve a specific product by its ID",
                "operationId": "7ab21ddb713501f3d4c2914892c02a21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product",
                "description": "Update an existing product's information",
                "operationId": "6a7e11900844cd85cff66e662b82bd4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product",
                "description": "Delete a product from the system. Cannot delete if used in invoice items.",
                "operationId": "e80a6ca46716acee6b47ea1ac91663c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Product cannot be deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete product. It is used in 5 invoice item(s)."
                                        },
                                        "invoice_items_count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/search/query": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Search products",
                "description": "Search products by name or description",
                "operationId": "f759f1699256e982e1f0f599c1c2b0a9",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 255,
                            "minLength": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/price-range/filter": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products by price range",
                "description": "Retrieve products within a specified price range",
                "operationId": "a154e2acb7f8a028fe0ad13811918fcf",
                "parameters": [
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price (must be greater than or equal to min_price)",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users in the system",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Create a new user with the provided information",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Retrieve a specific user by their ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Update an existing user's information",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "description": "Delete a user from the system",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/admins/list": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all admins",
                "description": "Retrieve a list of all admin users",
                "operationId": "59af184a4c7b38c750b38219750a50cc",
                "responses": {
                    "200": {
                        "description": "List of admin users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/sellers/list": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all sellers",
                "description": "Retrieve a list of all seller users",
                "operationId": "9cb45b2489fc4ec035f94fc110e08cb7",
                "responses": {
                    "200": {
                        "description": "List of seller users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/clients/list": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all clients",
                "description": "Retrieve a list of all client users",
                "operationId": "b4d9e9290dc62262e9ec44e218b2d6aa",
                "responses": {
                    "200": {
                        "description": "List of client users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "InvoiceItem": {
                "required": [
                    "product_id",
                    "quantity",
                    "total_price"
                ],
                "properties": {
                    "id": {
                        "description": "Invoice item unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_id": {
                        "description": "Invoice ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "product_id": {
                        "description": "Product ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "quantity": {
                        "description": "Quantity of the product",
                        "type": "integer",
                        "minimum": 1
                    },
                    "total_price": {
                        "description": "Total price for this item",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "created_at": {
                        "description": "Invoice item creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Invoice item last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Invoice": {
                "required": [
                    "seller_id",
                    "client_id",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "Invoice unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "seller_id": {
                        "description": "Seller user ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "client_id": {
                        "description": "Client user ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "description": "Invoice status",
                        "type": "string",
                        "enum": [
                            "draft",
                            "sent",
                            "paid",
                            "overdue"
                        ]
                    },
                    "seller": {
                        "$ref": "#/components/schemas/User"
                    },
                    "client": {
                        "$ref": "#/components/schemas/User"
                    },
                    "items": {
                        "description": "Invoice items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceItem"
                        }
                    },
                    "created_at": {
                        "description": "Invoice creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Invoice last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "InvoiceCreateRequest": {
                "required": [
                    "seller_id",
                    "client_id",
                    "items"
                ],
                "properties": {
                    "seller_id": {
                        "description": "Seller user ID (must be a seller)",
                        "type": "string",
                        "format": "uuid"
                    },
                    "client_id": {
                        "description": "Client user ID (must be a client)",
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "description": "Invoice status (defaults to draft)",
                        "type": "string",
                        "enum": [
                            "draft",
                            "sent",
                            "paid",
                            "overdue"
                        ]
                    },
                    "items": {
                        "description": "Invoice items",
                        "type": "array",
                        "items": {
                            "required": [
                                "product_id",
                                "quantity",
                                "total_price"
                            ],
                            "properties": {
                                "product_id": {
                                    "description": "Product ID",
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "quantity": {
                                    "description": "Quantity of the product",
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "total_price": {
                                    "description": "Total price for this item",
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0
                                }
                            },
                            "type": "object"
                        },
                        "minItems": 1
                    }
                },
                "type": "object"
            },
            "InvoiceUpdateRequest": {
                "properties": {
                    "seller_id": {
                        "description": "Seller user ID (must be a seller)",
                        "type": "string",
                        "format": "uuid"
                    },
                    "client_id": {
                        "description": "Client user ID (must be a client)",
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "description": "Invoice status",
                        "type": "string",
                        "enum": [
                            "draft",
                            "sent",
                            "paid",
                            "overdue"
                        ]
                    },
                    "items": {
                        "description": "Invoice items",
                        "type": "array",
                        "items": {
                            "required": [
                                "product_id",
                                "quantity",
                                "total_price"
                            ],
                            "properties": {
                                "product_id": {
                                    "description": "Product ID",
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "quantity": {
                                    "description": "Quantity of the product",
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "total_price": {
                                    "description": "Total price for this item",
                                    "type": "number",
                                    "format": "float",
                                    "minimum": 0
                                }
                            },
                            "type": "object"
                        },
                        "minItems": 1
                    }
                },
                "type": "object"
            },
            "InvoiceStatusUpdateRequest": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "description": "New invoice status",
                        "type": "string",
                        "enum": [
                            "draft",
                            "sent",
                            "paid",
                            "overdue"
                        ]
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "name",
                    "unit_price"
                ],
                "properties": {
                    "id": {
                        "description": "Product unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "Product name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "maxLength": 1000,
                        "nullable": true
                    },
                    "unit_price": {
                        "description": "Product unit price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    },
                    "created_at": {
                        "description": "Product creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Product last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductCreateRequest": {
                "required": [
                    "name",
                    "unit_price"
                ],
                "properties": {
                    "name": {
                        "description": "Product name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "maxLength": 1000,
                        "nullable": true
                    },
                    "unit_price": {
                        "description": "Product unit price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    }
                },
                "type": "object"
            },
            "ProductUpdateRequest": {
                "properties": {
                    "name": {
                        "description": "Product name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Product description",
                        "type": "string",
                        "maxLength": 1000,
                        "nullable": true
                    },
                    "unit_price": {
                        "description": "Product unit price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    }
                },
                "type": "object"
            },
            "ProductSearchRequest": {
                "required": [
                    "query"
                ],
                "properties": {
                    "query": {
                        "description": "Search query",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 2
                    }
                },
                "type": "object"
            },
            "ProductPriceRangeRequest": {
                "required": [
                    "min_price",
                    "max_price"
                ],
                "properties": {
                    "min_price": {
                        "description": "Minimum price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    },
                    "max_price": {
                        "description": "Maximum price",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "id": {
                        "description": "User unique identifier",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "description": "User's phone number",
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "address": {
                        "description": "User's address",
                        "type": "string",
                        "maxLength": 500,
                        "nullable": true
                    },
                    "role": {
                        "description": "User's role",
                        "type": "string",
                        "enum": [
                            "admin",
                            "seller",
                            "client"
                        ]
                    },
                    "is_active": {
                        "description": "Whether the user is active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "User creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "User last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserCreateRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role"
                ],
                "properties": {
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string",
                        "minLength": 8
                    },
                    "phone": {
                        "description": "User's phone number",
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "address": {
                        "description": "User's address",
                        "type": "string",
                        "maxLength": 500,
                        "nullable": true
                    },
                    "role": {
                        "description": "User's role",
                        "type": "string",
                        "enum": [
                            "admin",
                            "seller",
                            "client"
                        ]
                    },
                    "is_active": {
                        "description": "Whether the user is active",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserUpdateRequest": {
                "properties": {
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string",
                        "minLength": 8
                    },
                    "phone": {
                        "description": "User's phone number",
                        "type": "string",
                        "maxLength": 20,
                        "nullable": true
                    },
                    "address": {
                        "description": "User's address",
                        "type": "string",
                        "maxLength": 500,
                        "nullable": true
                    },
                    "role": {
                        "description": "User's role",
                        "type": "string",
                        "enum": [
                            "admin",
                            "seller",
                            "client"
                        ]
                    },
                    "is_active": {
                        "description": "Whether the user is active",
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "User management endpoints"
        },
        {
            "name": "Products",
            "description": "Product management endpoints"
        },
        {
            "name": "Invoices",
            "description": "Invoice management endpoints"
        }
    ]
}